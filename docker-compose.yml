services:
  proxy:
    image: nginx:1.25-alpine
    container_name: dev-proxy
    ports:
      - "8080:80"
    volumes:
      - ./config/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./build/sites-enabled:/etc/nginx/conf.d/sites-enabled:ro
      - ./scripts/nginx-entrypoint.sh:/entrypoint.sh:ro
      - ./.artifacts:/usr/share/nginx/html/.artifacts
      - ./status:/usr/share/nginx/html/status:ro
    networks:
      - devproxy
    command: ["sh", "/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/health.json"]
      interval: 30s
      timeout: 5s
      retries: 5

  dashboard-dev:
    image: node:18-alpine
    container_name: dashboard-dev
    profiles: ["dashboard"]
    working_dir: /app
    volumes:
      - ./dashboard:/app
    command: ["npm", "run", "dev"]
    networks:
      - devproxy
    environment:
      - PORT=2000
      - NODE_ENV=development

  ngrok:
    image: ngrok/ngrok:latest
    container_name: dev-ngrok
    command: ["sh", "/entrypoint.sh"]
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_STATIC_DOMAIN=${NGROK_STATIC_DOMAIN}
    volumes:
      - ./scripts/ngrok-entrypoint.sh:/entrypoint.sh:ro
      - ./config/ngrok.dynamic.yml:/etc/ngrok.dynamic.yml:ro
    depends_on:
      - proxy
    networks:
      - devproxy

  conflict-api:
    image: node:18-alpine
    container_name: dev-conflict-api
    working_dir: /app
    command: ["node", "utils/conflictAPI.js"]
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_EMBED_MODEL=${OPENAI_EMBED_MODEL}
    networks:
      - devproxy
    ports:
      - "3001:3001"
    depends_on:
      - proxy

  auto-scan:
    image: node:18-alpine
    container_name: dev-auto-scan
    working_dir: /app
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
      - LOCAL_PROXY_BASE=http://dev-proxy
    entrypoint: ["sh", "-c"]
    command: ["while true; do node test/scanApps.js; sleep 30; done"]
    networks:
      - devproxy
    depends_on:
      - proxy

networks:
  devproxy:
    external: true
    name: devproxy
